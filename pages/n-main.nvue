<template>
  <NDashboard>
    <template v-slot:body="{showSetting, showWebviews, onHandleData, activeTabComponent}">
      <scroll-view scroll-y="true" :class="[showWebviews ? 'sbad-main-show' : 'sbad-main']">

        <!--
                  此处遍历所有打开的web-view
                  当点击某个web-view时，将其加入到打开的数组中
                  当前web-view对象，设置为活跃对象，同时将其flex设为1
                  非活跃对象，将其flex设为0，不占据任何空间
                 -->
        <view :class="['sbad-web-view-add', showWebviews ? 'sbad-web-view-add-show' : 'sbad-web-view-add-dis']">
          <view :class="[showWebviews ? 'sbad-web-view-add-title-show' : 'sbad-web-view-add-title']">
            <text class="font-size-base"></text>
          </view>
          <view :class="['sbad-web-view-add-inner']" @click.self="(data) => {
              openApps(data, onHandleData)
            }">
            <u--text class="sbad-web-view-add-txt" text="+" size="36"></u--text>
          </view>
        </view>
        <template v-for="webView in webViews">
          <st-web-view :key="webView.url" :show="showWebviews"
            :class="['sbad-web-view', activeWebView.id === webView.id ? 'sbad-web-view-active' : 'sbad-web-view-dective', showWebviews ? 'sbad-web-view-show' : '']"
            :web-url="webView" @openActiveView="(data) => {
              openActiveView(data, onHandleData)
            }"></st-web-view>
        </template>
        <!-- 覆盖在web-view上的设置 -->
        <n-setting :render-whole="true" :innerCompInSys="innerCompInSys" :componentName="activeTabComponent"
          :showSetting="showSetting" @close='(data) => {
              handleCloseSetting(data, onHandleData)
            }' @setActiveWebview='(data) => {
              setActiveWebview(data, onHandleData)
            }' @editSysTitle='editSysTitle'>
        </n-setting>
      </scroll-view>

    </template>
  </NDashboard>
</template>

<script>
  import NDashboard from '@/components/n-dashboard/n-dashboard.vue'
  import NSetting from '@/components/n-dashboard/n-setting.vue'
  import StWebView from '@/components/n-web-nview.nvue'

  import orgsData from '@/components/n-dashboard/orgs.js'

  // #ifdef APP-NVUE
  const dom = weex.requireModule("dom");
  console.log(dom, 'dom')
  // #endif
  export default {
    components: {
      NDashboard,
      NSetting,
      StWebView,
    },
    mounted() {},
    data() {
      return {
        showWebviews: true,
        // activeTab: {
        //   component: '',
        //   openSetting: false,
        // },
        activeWebView: {
          // id: -1,
          // url: 'https://www.cnblogs.com/heisetianshi/p/15573264.html'
        },
        webViews: [{
          id: -1,
          url: 'https://www.baidu.com'
        }],
        innerCompInSys: {
          component: 'NSysSettingSesc',
          title: ''
        },
        compInSys: [{
            name: 'setting',
            title: '设置/修改密码',
            label: 'setting',
            component: 'NEditPwd',
            color: '#000',
            size: 28,
          },
          {
            name: 'setting',
            title: '设置',
            label: 'setting',
            component: 'NSysSettingSesc',
            color: '#000',
            size: 28,
          },
        ],
      }
    },
    methods: {
      setActiveWebview(data, onHandleData) {
        console.log('设置', this.webViews, data)
        let hasV = this.webViews.find(view => view.id === data.id)
        if (!hasV) {
          this.webViews.push(data)
        }
        this.activeWebView = Object.assign({}, this.activeWebView, data)
        onHandleData({
          type: 'setTab',
          data: {
            component: 'show-webview',
            showSetting: false,
            showWebviews: false
          }
        })

        console.log(data, '设置活跃webview', this.activeWebView)
      },
      editSysTitle(component) {
        console.log(component, 'component')
        let curComp = this.compInSys.find(item => item.component === component)
        if (!curComp) {
          return false
        }
        console.log(curComp, 'curcpme')
        this.innerCompInSys = Object.assign({}, this.innerCompInSys, curComp)
      },
      handleCloseSetting(date, onHandleData) {
        console.log('获取', arguments)
        onHandleData({
          type: 'setTab',
          data: {
            component: 'show-webview',
            showSetting: false,
          }
        })
      },
      openActiveView(data, onHandleData) {
        console.log('hhhhhh')
        // 传递给dashboard
        onHandleData({
          type: 'setTab',
          data: {
            component: 'show-webview',
            showSetting: false,
            showWebviews: false
          }
        })
        this.activeWebView = Object.assign({}, this.activeWebView, data)
      },
      openApps(data, onHandleData) {
        console.log('hhhhh')
        onHandleData({
          type: 'setTab',
          data: {
            component: 'NAppNav',
            showWebviews: false,
            showSetting: true,
          }
        })
        this.innerCompInSys = Object.assign({}, this.innerCompInSys, {
          component: 'NSysSettingSesc',
          title: ''
        })
      },
    }

  }
</script>

<style scoped lang="scss">
  $widthOrHeight: 36rpx;

  .sbad {

    // 主体-主体样式
    &-main {
      flex: 1;
      display: flex;

      &-show {
        flex: 1;
        display: flex;
        flex-flow: row wrap;
      }
    }

    &-web-view {
      display: flex;
      flex: 0;
      color: red;

      &-add {

        margin: 6rpx;
        display: flex;

        &-inner {
          background-color: #b3b3b3;
          display: flex;
          flex: 1;
          justify-content: center;
          align-items: center;
        }

        &-title {
          &-show {
            height: 20rpx;
            line-height: 20rpx;
          }
        }

        &-txt {
          // 遭遇view、text无法点击的情况，使用u--text后，将其padding设置最大，覆盖父容器即可全域点击
          display: flex;
          flex: 1;
        }

        &-show {
          flex: 0;
          width: 200rpx;
          height: 200rpx;
          color: green;
        }

        &-dis {
          margin-top: 0;
          margin-bottom: 0;
          display: flex;
          flex: 0;
          height: 0;
          color: orange;
        }
      }

      &-dective {
        flex: 0;
        height: 0;
      }

      &-active {
        flex: 1;
        color: yellow;
      }

      &-show {
        flex: 0;
        width: 200rpx;
        height: 200rpx;
        color: blue;
      }
    }

  }
</style>